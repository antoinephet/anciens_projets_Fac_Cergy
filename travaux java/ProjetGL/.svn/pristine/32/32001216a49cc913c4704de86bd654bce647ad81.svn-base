package test;



import java.awt.Color;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileReader;
import java.util.ArrayList;

import javax.swing.JPanel;



	public class Jeu extends JPanel implements ActionListener{
	
	String grille[][] = new String[30][21];
	
	
	private static ArrayList<Arbre> arbres;
	private static ArrayList<Buisson> buissons;
	private static ArrayList<Buisson1> buissons1;
	private static ArrayList<Eau> eaux;
	private static ArrayList<Gravier> graviers;
	private static ArrayList<Fontaine> fontaines;
	private static ArrayList<Mur> murs;
	private static ArrayList<Pancarte> pancartes;
	private static ArrayList<Portail> portails;
	private static ArrayList<Statue> statues;
	

	//private Grille g1;
	
	Gardien gardien;
	Intrus intrus;
	Mur mur;
	Arbre arbre;
	Eau eau;
	Buisson buisson;
	Buisson1 buisson1;
	Fontaine fontaine;
	Gravier gravier;
	Pancarte pancarte;
	Portail portail;
	Statue statue;
	FileReader fr;
	
	public Jeu(){
		
		//requestFocus();
		//setFocusable(true);
		setBackground(Color.WHITE);
		chargerCarte();
		//g1 = new Grille(1122, 714);
		//lancerJeu();
		
	}
	
	//public void lancerJeu(){
		//g1.chargementFichierIhm();
		
	//}
	
	public void paint(Graphics g){
		
		super.paint(g);
		Graphics2D g2d = (Graphics2D) g;
		
		for(int i=0;i < murs.size();i++){
			mur = (Mur) murs.get(i);
			g2d.drawImage(mur.getMur(), mur.getX(), mur.getY(), null);
			
		}
		
		for(int i=0;i < arbres.size();i++){
			arbre = (Arbre) arbres.get(i);
			g2d.drawImage(arbre.getArbre(), arbre.getX(), arbre.getY(), null);
			
		}
		
		for(int i=0;i < eaux.size();i++){
			eau = (Eau) eaux.get(i);
			g2d.drawImage(eau.getEau(), eau.getX(), eau.getY(), null);
			
		}
		
		for(int i=0;i < buissons.size();i++){
			buisson = (Buisson) buissons.get(i);
			g2d.drawImage(buisson.getBuisson(), buisson.getX(), buisson.getY(), null);
			
		}
		
		for(int i=0;i < buissons1.size();i++){
			buisson1 = (Buisson1) buissons1.get(i);
			g2d.drawImage(buisson1.getBuisson1(), buisson1.getX(), buisson1.getY(), null);
			
		}
		
		for(int i=0;i < fontaines.size();i++){
			fontaine = (Fontaine) fontaines.get(i);
			g2d.drawImage(fontaine.getFontaine(), fontaine.getX(), fontaine.getY(), null);
			
		}
		
		for(int i=0;i < graviers.size();i++){
			gravier = (Gravier) graviers.get(i);
			g2d.drawImage(gravier.getGravier(), gravier.getX(), gravier.getY(), null);
			
		}
		
		for(int i=0;i < pancartes.size();i++){
			pancarte = (Pancarte) pancartes.get(i);
			g2d.drawImage(pancarte.getPancarte(), pancarte.getX(), pancarte.getY(), null);
			
		}
		
		for(int i=0;i < portails.size();i++){
			portail = (Portail) portails.get(i);
			g2d.drawImage(portail.getPortail(), portail.getX(), portail.getY(), null);
			
		}
		
		for(int i=0;i < statues.size();i++){
			statue = (Statue) statues.get(i);
			g2d.drawImage(statue.getStatue(), statue.getX(), statue.getY(), null);
			
		}
		
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		repaint();
		
	}
	

	public void chargerCarte(){
		
		try{
				
				fr = new FileReader("Cartes/Carte6.txt");

			
			int i = 0;
			int x=0, y = 0;
			
			
			arbres = new ArrayList<Arbre>();
			eaux = new ArrayList<Eau>();
			buissons = new ArrayList<Buisson>();
			buissons1 =  new ArrayList<Buisson1>();
			graviers = new ArrayList<Gravier>() ;
			fontaines =  new ArrayList<Fontaine>();
			murs = new ArrayList<Mur>();
			pancartes = new ArrayList<Pancarte>();
			portails = new ArrayList<Portail>();
			statues = new ArrayList<Statue>();
			
			while((i = fr.read()) != -1){
				char conv = (char) i; // la valeur en int convertit en char
				
				// si la lecture trouve la valeur "0" dans le fichier, alors la valeur change en "M"
				// et instance la classe Mur
				if(conv == '0'){
					grille[x][y] = "M";
					mur = new Mur(x * 34, y * 34);
					murs.add(mur);
					
				}
				
				// si la lecture trouve la valeur "1" dans le fichier, alors la valeur change en "A"
				// et instance la classe Arbre
				else if(conv == '1'){ // 
					
					grille[x][y] = "A";
					arbre = new Arbre(x * 34, y * 34);
					arbres.add(arbre);
				}
				
				// si la lecture trouve la valeur "2" dans le fichier, alors la valeur change en "E"
				// et instance la classe Eau
				else if(conv == '2'){
					grille[x][y] = "E";
					eau = new Eau(x * 34, y * 34);
					eaux.add(eau);
				}
				
				// si la lecture trouve la valeur "3" dans le fichier, alors la valeur change en "G"
				// et instance la classe Gardien
				else if(conv == '3'){
					
					grille[x][y] = "G";
					gardien = new Gardien(x * 34, y * 34);
					
				}
				
				// si la lecture trouve la valeur "4" dans le fichier, alors la valeur change en "S"
				// et instance la classe Gardien
				else if(conv == '4'){
					grille[x][y] = "S";
					gardien = new Gardien(x * 34, y * 34);
					
				}
				
				else if(conv == '5'){
					grille[x][y] = "C";
					gardien = new Gardien(x * 34, y * 34);
					
				}
				
				// si la lecture trouve la valeur "6" dans le fichier, alors la valeur change en "P"
				// et instance la classe Gardien
				else if(conv == '6'){
					grille[x][y] = "P";
					gardien = new Gardien(x * 34, y * 34);
					
				}
				
				// si la lecture trouve la valeur "7" dans le fichier, alors la valeur change en "I"
				// et instance la classe intrus
				else if(conv == '7'){
					grille[x][y] = "I";
					intrus = new Intrus(x * 34, y * 34);
					
				}
				// si la lecture trouve la valeur "8" dans le fichier, alors la valeur change en "R"
				// et instance la classe intrus
				else if(conv == '8'){
					grille[x][y] = "R";
					intrus = new Intrus(x * 34, y * 34);
					
				}
				
				// si la lecture trouve la valeur "9" dans le fichier, alors la valeur change en "D"
				// et instance la classe intrus
				else if(conv == '9'){
					grille[x][y] = "D";
					intrus = new Intrus(x * 34, y * 34);
					
				}
				
				
				/*
				 * 
				 * 
				 */
				
				// si la lecture trouve la valeur "a" dans le fichier, alors la valeur change en "B"
				// et instance la classe Buisson
				else if(conv == 'a'){
					grille[x][y] = "B";
					buisson = new Buisson(x * 34, y * 34);
					buissons.add(buisson);
					
				}
				
				// si la lecture trouve la valeur "b" dans le fichier, alors la valeur change en "F"
				// et instance la classe Buisson1
				else if(conv == 'b'){
					grille[x][y] = "F";
					buisson1 = new Buisson1(x * 34, y * 34);
					buissons1.add(buisson1);
					
				}
				

				// si la lecture trouve la valeur "c" dans le fichier, alors la valeur change en "H"
				// et instance la classe Fontaine
				else if(conv == 'c'){
					grille[x][y] = "H";
					fontaine = new Fontaine(x * 34, y * 34);
					fontaines.add(fontaine);
					
				}
				
				// si la lecture trouve la valeur "d" dans le fichier, alors la valeur change en "J"
				// et instance la classe Gravier
				else if(conv == 'd'){
					grille[x][y] = "J";
					gravier = new Gravier(x * 34, y * 34);
					graviers.add(gravier);
					
				}
				

				// si la lecture trouve la valeur "e" dans le fichier, alors la valeur change en "F"
				// et instance la classe Pancarte
				else if(conv == 'e'){
					grille[x][y] = "F";
					pancarte = new Pancarte(x * 34, y * 34);
					pancartes.add(pancarte);
					
				}
				
				// si la lecture trouve la valeur "f" dans le fichier, alors la valeur change en "L"
				// et instance la classe Portail
				else if(conv == 'f'){
					grille[x][y] = "L";
					portail = new Portail(x * 34, y * 34);
					portails.add(portail);
					
				}
				
				// si la lecture trouve la valeur "g" dans le fichier, alors la valeur change en "N"
				// et instance la classe Statue
				else if(conv == 'g'){
					grille[x][y] = "N";
					statue = new Statue(x * 34, y * 34);
					statues.add(statue);
					
				}
				
				
				
				// si la lecture trouve la valeur " " dans le fichier, alors la valeur change en " " donc pas de valeur
				
				else if(conv == ' '){
					grille[x][y] = " ";
				}
				else if(conv == '\r' || conv == '\n'){
					x--;
				}
				
				if(x == 30-1){ // si on atteint le x maximum, on incrémente le y
					y++;
					x=0;
				}
				else {
					x++;
				}
				
			}
			
		}catch(Exception ex){}
		repaint();
	}
	
	
}
